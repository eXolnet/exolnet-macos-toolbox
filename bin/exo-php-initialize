#!/usr/bin/env bash

#
# Script setup
#

# Define toolbox directory if not set
if [[ -z "$TOOLBOX" ]]; then
    TOOLBOX="$HOME/.exolnet/toolbox"
fi

# Check if toolbox directory exists
if [[ ! -d "$TOOLBOX" ]]; then
    echo "Directory ~/.exolnet does not exists, exiting ..."
    exit 1
fi

# Source helpers
. $TOOLBOX/lib/include

#
# Script checks
#

# Check if command was ran as root.
if [[ $(id -u) -eq 0 ]]; then
    echo
    echo "The command \"`basename \"$0\"`\" should not be executed as root or via sudo directly."
    echo "When a command requires root access, you will be prompted for a password as needed."
    exit 1
fi

# Usage
if [[ $# -ne 0 && $# -ne 1 ]]; then
    first=true

    brew list | egrep '^php(@[0-9.]{3,})?$' | sed 's/^php$/php@8.0/g' | sort | grep -o -E '[0-9.]+' | while read -r line ; do
        if [ "$first" = true ]; then
            echo
            echo -n "Usage: exo-php-switch ["
        else
            echo -n "|"
        fi

        echo -n "$line"
        first=false
    done

    echo "]"
    exit 1
fi

#
# Script execution
#

e_header "Initializing php for this project"

if [[ $# -eq 0 ]]; then
    safe_execute "test -f composer.json" "Found composer.json file" "Failed to find composer.json file"
    search_version=$(jq -r '.require.php | match("^([0-9]+\\.[0-9]+)\\.\\*$") | .captures[0].string' composer.json)

    if [[ -n "$search_version" ]]; then
        e_success "Found valid php version requirement in composer.json file"
    else
        e_error "Failed to find valid php version requirement in composer.json file"
        exit 1
    fi

    selected_version="php$(echo $search_version | tr -cd [:digit:])"
else
    selected_version="php$(echo $1 | tr -cd [:digit:])"
fi

brew_version="$(php_convert_version_to_homebrew $selected_version)"
php_version="$(php_convert_version_to_dot_version $selected_version)"

safe_execute "brew list $brew_version" "Found $brew_version" "Failed to find $brew_version"
link_file "$(brew --prefix)/opt/$brew_version/bin/php" ".php"

slug=$(basename "$PWD")
echo
ask_question_with_default "Name of the symlink pointing to this project?" "$slug"
echo
slug="$REPLY"

if ! [[ "$slug" =~ ^[a-zA-Z0-9_-]+$ ]]; then
    e_error "Symlink name can only contains alphanumeric characters, underscores and dashes"
    exit 1
fi

httpd_create_include_php $slug
safe_execute "httpd_generate_include_php $php_version $slug" "Generated apache include file for $slug with php $php_version" "Failed to generated apache include file for $slug with php $php_version"

sudo_brew_restart httpd

e_header "All done!"

