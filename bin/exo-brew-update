#!/usr/bin/env bash

#
# Script setup
#

# Define eXolnet directory if not set
if [ -z "$EXOLNET" ]; then
    EXOLNET="$HOME/.exolnet"
fi

# Check if eXolnet directory exists
if [ ! -d "$EXOLNET" ]; then
    echo "Directory ~/.exolnet does not exists, exiting ..."
    exit 1
fi

# Source helpers
. $EXOLNET/lib/header
. $EXOLNET/lib/utils
. $EXOLNET/lib/brew
. $EXOLNET/lib/httpd
. $EXOLNET/lib/php

#
# Script checks
#

# Check if command was ran as root.
if [[ $(id -u) -eq 0 ]]; then
    echo
    echo "The command \"`basename \"$0\"`\" should not be executed as root or via sudo directly."
    echo "When a command requires root access, you will be prompted for a password as needed."
    exit 1
fi

#
# Script execution
#

# FIXME: This script need to be fixed
echo
e_error "This script has been temporarily disabled since it is not producing the expected result."
e_arrow "Please use 'brew upgrade' instead."
exit 1

e_header "Warming up"

brew_update

outdated=$(brew outdated --quiet)
httpd=0
php=0

if [ -z "$outdated" ]; then
    e_header "Nothing to upgrade!"
    exit
fi

echo "$outdated" | egrep -q "^httpd$" && httpd=1
echo "$outdated" | egrep -q "^homebrew/php" && php=1

e_header "Upgrading formulae"

for formula in $(echo "$outdated" | egrep -v "^homebrew/php/"); do
    brew_upgrade "$formula"
done

#brew_unlink php56
#brew_unlink php70
#brew_unlink php71
#brew_unlink php72

if echo "$outdated" | egrep -q "^homebrew/php/php56"; then
    e_header "Upgrading php56"

    brew_reinstall homebrew/php/php56 --with-httpd --build-from-source
    brew_reinstall homebrew/php/php56-imagick --build-from-source
    brew_reinstall homebrew/php/php56-mcrypt --build-from-source
    brew_reinstall homebrew/php/php56-xdebug --build-from-source
    brew_unlink php56
fi

if echo "$outdated" | egrep -q "^homebrew/php/php70"; then
    e_header "Upgrading php70"

    brew_reinstall homebrew/php/php70 --with-httpd --build-from-source
    brew_reinstall homebrew/php/php70-imagick --build-from-source
    brew_reinstall homebrew/php/php70-mcrypt --build-from-source
    brew_reinstall homebrew/php/php70-xdebug --build-from-source
    brew_unlink php70
fi

if echo "$outdated" | egrep -q "^homebrew/php/php71"; then
    e_header "Upgrading php71"

    brew_reinstall homebrew/php/php71 --with-httpd --build-from-source
    brew_reinstall homebrew/php/php71-imagick --build-from-source
    brew_reinstall homebrew/php/php71-mcrypt --build-from-source
    brew_reinstall homebrew/php/php71-xdebug --build-from-source
    brew_unlink php71
fi

if echo "$outdated" | egrep -q "^homebrew/php/php72"; then
    e_header "Upgrading php72"

    brew_reinstall homebrew/php/php72 --with-httpd --build-from-source
    brew_reinstall homebrew/php/php72-imagick --build-from-source
    brew_reinstall homebrew/php/php72-xdebug --build-from-source
    brew_unlink php72
fi

outdated=$(brew outdated --quiet)

if [ -n "$outdated" ]; then
    e_header "Upgrading remaining formulae"

    for formula in $(echo "$outdated"); do
        brew_upgrade "$formula"
    done
fi

if [[ "$httpd" -eq 1 ]]; then
    e_header "Reconfiguring apache"

    safe_execute "httpd_replace_listen_80" "Changed listen port 8080 -> 80" "Failed to change listen port 8080 -> 80"
    safe_execute "httpd_replace_listen_443" "Changed listen port 8443 -> 443" "Failed to change listen port 8443 -> 443"
    safe_execute "httpd_disable_mpm_event_module" "Disabled mpm event module in httpd" "Failed to disable mpm event module in httpd"
    safe_execute "httpd_enable_mpm_prefork_module" "Enabled mpm prefork module in httpd" "Failed to enable mpm prefork module in httpd"
    safe_execute "httpd_add_include_exolnet" "Added exolnet include directive" "Failed to add exolnet include directive"
    safe_execute "httpd_generate_user_conf" "Generated user conf file" "Failed to generate user conf file"
    sudo_brew_restart httpd
fi

if [[ "$php" -eq 1 ]]; then
    e_header "Reconfiguring php"

    safe_execute "httpd_disable_php_module" "Disabled php module in httpd" "Failed to disable php module in httpd"
    brew_link php71
    link_file "$EXOLNET/conf/httpd_php/php71.conf" "$HTTPD_ETC/exolnet/php.conf"
    sudo_brew_restart httpd
fi

e_header "All done!"
