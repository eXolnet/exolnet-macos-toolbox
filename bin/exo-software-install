#!/usr/bin/env bash

#
# Script setup
#

# Define toolbox directory if not set
if [[ -z "$TOOLBOX" ]]; then
    TOOLBOX="$HOME/.exolnet/toolbox"
fi

# Check if toolbox directory exists
if [[ ! -d "$TOOLBOX" ]]; then
    echo "Directory ~/.exolnet does not exists, exiting ..."
    exit 1
fi

# Source helpers
. "$TOOLBOX/lib/include"

#
# Script checks
#

# Check if homebrew shell environment variables are defined
if [[ -z "$HOMEBREW_PREFIX" ]]; then
    echo
    echo "Homebrew environment variables are missing."
    echo "They must be present in your shell profile in order for this script to run."
    exit 1
fi

# Check if command was ran as root.
if [[ $(id -u) -eq 0 ]]; then
    echo
    echo "The command \"$(basename "$0")\" should not be executed as root or via sudo directly."
    echo "When a command requires root access, you will be prompted for a password as needed."
    exit 1
fi

#
# Script execution
#

# Tweak file globbing
shopt -s dotglob
shopt -s nullglob

e_header "Tapping additional taps"
brew_tap homebrew/cask-fonts
brew_tap homebrew/services
brew_tap exolnet/homebrew-formula
brew_tap exolnet/homebrew-cask

# Read preferences
MAIN_PREFERENCES=$(read_preferences main)
APPLICATIONS_PREFERENCES=$(read_preferences applications)
BASH_PREFERENCES=$(read_preferences bash)
DEVELOPMENT_PREFERENCES=$(read_preferences development)

if [[ " ${MAIN_PREFERENCES[@]} " =~ " applications " ]]; then
    e_header "Installing applications"

    for item in ${APPLICATIONS_PREFERENCES[@]}; do
        if [[ "$item" =~ "font-roboto" ]]; then
            brew_install "svn"
        fi

        cask_install "$item"
    done

    QUICKLOOK_REGEX=" (qlcolorcode|qlstephen) "

    if [[ " ${APPLICATIONS_PREFERENCES[@]} " =~ $QUICKLOOK_REGEX ]]; then
        e_header "Configuring quicklook plugins"

        if [[ " ${APPLICATIONS_PREFERENCES[@]} " =~ " qlcolorcode " ]]; then
            plugin="${HOME}/Library/QuickLook/QLColorCode.qlgenerator"
            safe_execute "clear_extended_attributes $plugin" "Cleared extended attributes of $plugin" "Failed to clear extended attributes of $plugin"
        fi
        if [[ " ${APPLICATIONS_PREFERENCES[@]} " =~ " qlstephen " ]]; then
            plugin="${HOME}/Library/QuickLook/QLStephen.qlgenerator"
            safe_execute "clear_extended_attributes $plugin" "Cleared extended attributes of $plugin" "Failed to clear extended attributes of $plugin"
        fi
    fi
fi

if [[ " ${MAIN_PREFERENCES[@]} " =~ " bash " ]]; then
    e_header "Installing bash completions and utilities"

    for item in ${BASH_PREFERENCES[@]}; do
        brew_install "$item"

        if [[ "$item" == "git" ]]; then
            git_create_global_gitignore
            safe_execute "git_create_global_huskyrc" "Created global huskyrc file" "Failed to create global huskyrc file"
        fi

        if [[ "$item" == "python" ]]; then
            pip3_upgrade pip
            pip3_upgrade setuptools
            pip3_upgrade wheel
        fi
    done

    e_header "Loading completions"
    safe_execute "completion_add_source_bash_profile" "Added bash-completion source directive" "Failed to add bash-completion source directive"
    completion_load
fi

if [[ " ${MAIN_PREFERENCES[@]} " =~ " development " ]]; then
    e_header "Installing dependencies"
    brew_install jinja2-cli

    if [[ " ${DEVELOPMENT_PREFERENCES[@]} " =~ " mysql " ]]; then
        e_header "Installing and configuring mysql"
        brew_install mysql
        safe_execute "mysql_disable_binlog" "Disabled mysql binlog" "Failed to disable mysql binlog"
        safe_execute "mysql_configure_mysqldump" "Configured mysqldump for mysql@5.7 compatibility" "Failed to Configure mysqldump for mysql@5.7 compatibility"
        brew_restart mysql
        mysql_wait_for_connection
        safe_execute "mysql_create_users" "Created users exolnet_dev, exolnet_local, exolnet_prev, exolnet_prod, exolnet_qa and exolnet_test" "Failed to create users exolnet_dev, exolnet_local, exolnet_prod, exolnet_qa and exolnet_test"
        safe_execute "mysql_grant_users" "Granted users exolnet_dev, exolnet_local, exolnet_prev, exolnet_prod, exolnet_qa and exolnet_test" "Failed to grant users exolnet_dev, exolnet_local, exolnet_prod, exolnet_qa and exolnet_test"
        safe_execute "mysql_create_and_grant_current_user" "Granted global privileges to current user" "Failed to global privileges to current user"
    fi

    if [[ " ${DEVELOPMENT_PREFERENCES[@]} " =~ " dnsmasq " ]]; then
        e_header "Installing and configuring dnsmasq"
        brew_install dnsmasq
        safe_execute "dnsmasq_replace_listen_address" "Replaced listen address" "Failed to replace listen address"
        safe_execute "dnsmasq_enable_conf_dir" "Enabled conf directory" "Failed to enable conf directory"
        safe_execute "dnsmasq_generate_localhost_conf" "Generated dnsmasq localhost conf file" "Failed to generate dnsmasq localhost conf file"
        sudo_create_directory "$RESOLVER_DIR"
        safe_execute "resolver_generate_localhost_conf" "Generated resolver localhost conf file" "Failed to generate resolver localhost conf file"
        sudo_brew_restart dnsmasq
    fi

    if [[ " ${DEVELOPMENT_PREFERENCES[@]} " =~ " apache " ]]; then
        e_header "Installing and configuring apache with ssl"
        sudo_brew_is_status httpd stopped || sudo_brew_stop httpd
        create_directory "$HOME/Sites"
        brew_install httpd
        brew_install mkcert
        brew_install nss
        create_directory "$HTTPD_SSL/localhost"
        safe_execute "mkcert_install_local_ca" "Installed local certificate authority" "Failed to install local certificate authority"
        safe_execute "mkcert_generate_ssl_certificate" "Generated localhost ssl certificate" "Failed to generate localhost ssl certificate"
        safe_execute "httpd_replace_listen_80" "Changed listen port 8080 -> 80" "Failed to change listen port 8080 -> 80"
        safe_execute "httpd_replace_listen_443" "Changed listen port 8443 -> 443" "Failed to change listen port 8443 -> 443"
        safe_execute "httpd_disable_mpm_prefork_module" "Enabled mpm prefork module in httpd" "Failed to enable mpm prefork module in httpd"
        safe_execute "httpd_enable_mpm_event_module" "Disabled mpm event module in httpd" "Failed to disable mpm event module in httpd"
        create_directory "$HTTPD_ETC/exolnet"
        create_directory "$HTTPD_ETC/exolnet-php-fpm"
        create_directory "$HTTPD_ETC/exolnet-include"
        create_directory "$HTTPD_ETC/exolnet-vhosts"
        safe_execute "httpd_add_include_exolnet" "Added exolnet include directive" "Failed to add exolnet include directive"
        process_recursive "link_file" "$TOOLBOX/conf/httpd" "$HTTPD_ETC/exolnet"
        generate_jinja2_file "$TOOLBOX/conf/httpd_php_fpm/php8.1-fpm.conf.j2" "$HTTPD_ETC/exolnet-php-fpm/php8.1-fpm.conf"
        generate_jinja2_file "$TOOLBOX/conf/httpd_php_fpm/php8.2-fpm.conf.j2" "$HTTPD_ETC/exolnet-php-fpm/php8.2-fpm.conf"
        generate_jinja2_file "$TOOLBOX/conf/httpd_php_fpm/php8.3-fpm.conf.j2" "$HTTPD_ETC/exolnet-php-fpm/php8.3-fpm.conf"
        generate_jinja2_file "$TOOLBOX/conf/httpd_vhosts/100-default.conf.j2" "$HTTPD_ETC/exolnet-vhosts/100-default.conf"
        generate_jinja2_file "$TOOLBOX/conf/httpd_vhosts/400-wildcard.conf.j2" "$HTTPD_ETC/exolnet-vhosts/400-wildcard.conf"
        generate_jinja2_file "$TOOLBOX/conf/httpd_vhosts/600-default-ssl.conf.j2" "$HTTPD_ETC/exolnet-vhosts/600-default-ssl.conf"
        generate_jinja2_file "$TOOLBOX/conf/httpd_vhosts/900-wildcard-ssl.conf.j2" "$HTTPD_ETC/exolnet-vhosts/900-wildcard-ssl.conf"
        safe_execute "httpd_generate_user_conf" "Generated user conf file" "Failed to generate user conf file"
        link_file "$HOME/Sites" "$HTTPD_WWW"
        sudo_brew_restart httpd
    fi

    if [[ "${DEVELOPMENT_PREFERENCES[@]}" =~ "php" ]]; then
        e_header "Preparing php installation and configuration"
        brew_stop_all_php_fpm
        brew_unlink_all_php
        remove_file "$HOMEBREW_PREFIX/bin/php"
        brew_install imagemagick
        brew_install pkg-config
    fi

    if [[ " ${DEVELOPMENT_PREFERENCES[@]} " =~ " php81 " ]]; then
        e_header "Installing and configuring php 8.1"
        brew_install php@8.1
        brew_link_force php@8.1
        safe_execute "php_link_pcre2_header 8.1" "Linked pcre2 header to php@8.1 include directory" "Failed to link pcre2 header to php@8.1 include directory"
        safe_execute "php_remove_imagick_extension_insert 8.1" "Removed php@8.1 imagick extension insert" "Failed to remove php@8.1 imagick extension insert"
        safe_execute "php_remove_pcov_extension_insert 8.1" "Removed php@8.1 pcov extension insert" "Failed to remove php@8.1 pcov extension insert"
        safe_execute "php_remove_redis_extension_insert 8.1" "Removed php@8.1 redis extension insert" "Failed to remove php@8.1 redis extension insert"
        safe_execute "php_remove_xdebug_extension_insert 8.1" "Removed php@8.1 xdebug extension insert" "Failed to remove php@8.1 xdebug extension insert"
        pecl_update_channels
        pecl_install 8.1 imagick
        pecl_install 8.1 pcov
        pecl_install 8.1 redis
        pecl_install 8.1 xdebug
        safe_execute "php_remove_imagick_extension_from_php_ini 8.1" "Removed php@8.1 imagick extension from php.ini" "Failed to remove php@8.1 imagick extension from php.ini"
        safe_execute "php_remove_pcov_extension_from_php_ini 8.1" "Removed php@8.1 pcov extension from php.ini" "Failed to remove php@8.1 pcov extension from php.ini"
        safe_execute "php_remove_redis_extension_from_php_ini 8.1" "Removed php@8.1 redis extension from php.ini" "Failed to remove php@8.1 redis extension from php.ini"
        safe_execute "php_remove_xdebug_extension_from_php_ini 8.1" "Removed php@8.1 xdebug extension from php.ini" "Failed to remove php@8.1 xdebug extension from php.ini"
        safe_execute "php_configure_timezone 8.1" "Configured php@8.1 timezone" "Failed to configure php@8.1 timezone"
        safe_execute "php_configure_upload_max_filesize 8.1" "Configured php@8.1 upload_max_filesize" "Failed to configure php@8.1 upload_max_filesize"
        safe_execute "php_configure_imagick 8.1" "Configured php@8.1 imagick extension" "Failed to configure php@8.1 imagick extension"
        safe_execute "php_configure_pcov 8.1" "Configured php@8.1 pcov extension" "Failed to configure php@8.1 pcov extension"
        safe_execute "php_configure_redis 8.1" "Configured php@8.1 redis extension" "Failed to configure php@8.1 redis extension"
        safe_execute "php_configure_xdebug 8.1" "Configured php@8.1 xdebug extension" "Failed to configure php@8.1 xdebug extension"
        safe_execute "php_remove_default_php_fpm_pool 8.1" "Removed default php-fpm pool for php@8.1" "Failed to remove default php-fpm pool for php@8.1"
        safe_execute "php_generate_php_fpm_pool 8.1" "Generated php-fpm pool for php@8.1" "Failed to generate php-fpm pool for php@8.1"
        create_directory "$HOME/Sites/php81"
        safe_execute "php_create_phpinfo php81" "Created phpinfo.php file for php@8.1" "Failed to create phpinfo.php file for php@8.1"
        safe_execute "httpd_generate_include_php 8.1 php81" "Generated apache include file for php81 with php@8.1" "Failed to generated apache include file for php81 with php@8.1"
        brew_restart php@8.1
        brew_unlink php@8.1
    fi

    if [[ " ${DEVELOPMENT_PREFERENCES[@]} " =~ " php82 " ]]; then
        e_header "Installing and configuring php 8.2"
        brew_install php@8.2
        brew_link_force php@8.2
        safe_execute "php_link_pcre2_header 8.2" "Linked pcre2 header to php@8.2 include directory" "Failed to link pcre2 header to php@8.2 include directory"
        safe_execute "php_remove_imagick_extension_insert 8.2" "Removed php@8.2 imagick extension insert" "Failed to remove php@8.2 imagick extension insert"
        safe_execute "php_remove_pcov_extension_insert 8.2" "Removed php@8.2 pcov extension insert" "Failed to remove php@8.2 pcov extension insert"
        safe_execute "php_remove_redis_extension_insert 8.2" "Removed php@8.2 redis extension insert" "Failed to remove php@8.2 redis extension insert"
        safe_execute "php_remove_xdebug_extension_insert 8.2" "Removed php@8.2 xdebug extension insert" "Failed to remove php@8.2 xdebug extension insert"
        pecl_update_channels
        pecl_install 8.2 imagick
        pecl_install 8.2 pcov
        pecl_install 8.2 redis
        pecl_install 8.2 xdebug
        safe_execute "php_remove_imagick_extension_from_php_ini 8.2" "Removed php@8.2 imagick extension from php.ini" "Failed to remove php@8.2 imagick extension from php.ini"
        safe_execute "php_remove_pcov_extension_from_php_ini 8.2" "Removed php@8.2 pcov extension from php.ini" "Failed to remove php@8.2 pcov extension from php.ini"
        safe_execute "php_remove_redis_extension_from_php_ini 8.2" "Removed php@8.2 redis extension from php.ini" "Failed to remove php@8.2 redis extension from php.ini"
        safe_execute "php_remove_xdebug_extension_from_php_ini 8.2" "Removed php@8.2 xdebug extension from php.ini" "Failed to remove php@8.2 xdebug extension from php.ini"
        safe_execute "php_configure_timezone 8.2" "Configured php@8.2 timezone" "Failed to configure php@8.2 timezone"
        safe_execute "php_configure_upload_max_filesize 8.2" "Configured php@8.2 upload_max_filesize" "Failed to configure php@8.2 upload_max_filesize"
        safe_execute "php_configure_imagick 8.2" "Configured php@8.2 imagick extension" "Failed to configure php@8.2 imagick extension"
        safe_execute "php_configure_pcov 8.2" "Configured php@8.2 pcov extension" "Failed to configure php@8.2 pcov extension"
        safe_execute "php_configure_redis 8.2" "Configured php@8.2 redis extension" "Failed to configure php@8.2 redis extension"
        safe_execute "php_configure_xdebug 8.2" "Configured php@8.2 xdebug extension" "Failed to configure php@8.2 xdebug extension"
        safe_execute "php_remove_default_php_fpm_pool 8.2" "Removed default php-fpm pool for php@8.2" "Failed to remove default php-fpm pool for php@8.2"
        safe_execute "php_generate_php_fpm_pool 8.2" "Generated php-fpm pool for php@8.2" "Failed to generate php-fpm pool for php@8.2"
        create_directory "$HOME/Sites/php82"
        safe_execute "php_create_phpinfo php82" "Created phpinfo.php file for php@8.2" "Failed to create phpinfo.php file for php@8.2"
        safe_execute "httpd_generate_include_php 8.2 php82" "Generated apache include file for php82 with php@8.2" "Failed to generated apache include file for php82 with php@8.2"
        brew_restart php@8.2
        brew_unlink php@8.2
    fi

    if [[ " ${DEVELOPMENT_PREFERENCES[@]} " =~ " php83 " ]]; then
        e_header "Installing and configuring php 8.3"
        brew_install php@8.3
        brew_link_force php@8.3
        safe_execute "php_link_pcre2_header 8.3" "Linked pcre2 header to php@8.3 include directory" "Failed to link pcre2 header to php@8.3 include directory"
        safe_execute "php_remove_imagick_extension_insert 8.3" "Removed php@8.3 imagick extension insert" "Failed to remove php@8.3 imagick extension insert"
        safe_execute "php_remove_pcov_extension_insert 8.3" "Removed php@8.3 pcov extension insert" "Failed to remove php@8.3 pcov extension insert"
        safe_execute "php_remove_redis_extension_insert 8.3" "Removed php@8.3 redis extension insert" "Failed to remove php@8.3 redis extension insert"
        safe_execute "php_remove_xdebug_extension_insert 8.3" "Removed php@8.3 xdebug extension insert" "Failed to remove php@8.3 xdebug extension insert"
        pecl_update_channels
        pecl_install 8.3 imagick
        pecl_install 8.3 pcov
        pecl_install 8.3 redis
        pecl_install 8.3 xdebug
        safe_execute "php_remove_imagick_extension_from_php_ini 8.3" "Removed php@8.3 imagick extension from php.ini" "Failed to remove php@8.3 imagick extension from php.ini"
        safe_execute "php_remove_pcov_extension_from_php_ini 8.3" "Removed php@8.3 pcov extension from php.ini" "Failed to remove php@8.3 pcov extension from php.ini"
        safe_execute "php_remove_redis_extension_from_php_ini 8.3" "Removed php@8.3 redis extension from php.ini" "Failed to remove php@8.3 redis extension from php.ini"
        safe_execute "php_remove_xdebug_extension_from_php_ini 8.3" "Removed php@8.3 xdebug extension from php.ini" "Failed to remove php@8.3 xdebug extension from php.ini"
        safe_execute "php_configure_timezone 8.3" "Configured php@8.3 timezone" "Failed to configure php@8.3 timezone"
        safe_execute "php_configure_upload_max_filesize 8.3" "Configured php@8.3 upload_max_filesize" "Failed to configure php@8.3 upload_max_filesize"
        safe_execute "php_configure_imagick 8.3" "Configured php@8.3 imagick extension" "Failed to configure php@8.3 imagick extension"
        safe_execute "php_configure_pcov 8.3" "Configured php@8.3 pcov extension" "Failed to configure php@8.3 pcov extension"
        safe_execute "php_configure_redis 8.3" "Configured php@8.3 redis extension" "Failed to configure php@8.3 redis extension"
        safe_execute "php_configure_xdebug 8.3" "Configured php@8.3 xdebug extension" "Failed to configure php@8.3 xdebug extension"
        safe_execute "php_remove_default_php_fpm_pool 8.3" "Removed default php-fpm pool for php@8.3" "Failed to remove default php-fpm pool for php@8.3"
        safe_execute "php_generate_php_fpm_pool 8.3" "Generated php-fpm pool for php@8.3" "Failed to generate php-fpm pool for php@8.3"
        create_directory "$HOME/Sites/php83"
        safe_execute "php_create_phpinfo php83" "Created phpinfo.php file for php@8.3" "Failed to create phpinfo.php file for php@8.3"
        safe_execute "httpd_generate_include_php 8.3 php83" "Generated apache include file for php83 with php@8.3" "Failed to generated apache include file for php83 with php@8.3"
        brew_restart php@8.3
        brew_unlink php@8.3
    fi

    if [[ "${DEVELOPMENT_PREFERENCES[@]}" =~ "php" ]]; then
        e_header "Finishing php installation and configuration"
        brew_install composer
        brew_install php-code-sniffer
        brew_install wp-cli
        remove_file "$HOMEBREW_PREFIX/bin/php"
        generate_jinja2_file "$TOOLBOX/conf/php/php-finder.j2" "$HOMEBREW_PREFIX/bin/php"
        chmod_execute_file "$HOMEBREW_PREFIX/bin/php"
        safe_execute "git_add_file_to_global_gitignore .php" "Added '.php' in global gitignore file" "Failed to add '.php' in global gitignore file"
        safe_execute "httpd_disable_php_module" "Disabled php module in httpd" "Failed to disable php module in httpd"
        sudo_brew_restart httpd
    fi

    if [[ " ${DEVELOPMENT_PREFERENCES[@]} " =~ " bitwarden-cli " ]]; then
        e_header "Installing and configuring bitwarden cli"
        brew_install bitwarden-cli # installing before node@18 to avoid conflict
    fi

    if [[ " ${DEVELOPMENT_PREFERENCES[@]} " =~ " node " ]]; then
        e_header "Installing and configuring node"
        brew_is_installed node && brew_unlink node
        brew_install node@18
        brew_link_force node@18
        safe_execute "corepack_enable_yarn" "Enabled yarn" "Failed to enable yarn"
        safe_execute "corepack_prepare_yarn_stable" "Prepared and activated yarn stable" "Failed to prepare and activate yarn stable"
        safe_execute "yarn_enable_global_cache" "Enabled yarn global cache" "Failed to enable yarn global cache"
        npm_global_install bower
        npm_global_install gulp-cli
        npm_global_install grunt-cli
        npm_global_install dotenv-cli
    fi

    if [[ " ${DEVELOPMENT_PREFERENCES[@]} " =~ " redis " ]]; then
        e_header "Installing and configuring redis"
        brew_install redis
        brew_restart redis
    fi

    if [[ " ${DEVELOPMENT_PREFERENCES[@]} " =~ " mailhog " ]]; then
        e_header "Installing and configuring mailhog"
        brew_install mailhog
        brew_restart mailhog

        if [[ " ${DEVELOPMENT_PREFERENCES[@]} " =~ " apache " ]]; then
            generate_jinja2_file "$TOOLBOX/conf/httpd_vhosts_extra/750-mailhog.conf.j2" "$HTTPD_ETC/exolnet-vhosts/750-mailhog.conf"
            create_directory "$HOME/Sites/mailhog"
            sudo_brew_restart httpd
        fi
    fi

    if [[ " ${DEVELOPMENT_PREFERENCES[@]} " =~ " gh " ]]; then
        e_header "Installing and configuring github cli"
        brew_install gh
    fi

    if [[ " ${DEVELOPMENT_PREFERENCES[@]} " =~ " awscli " ]]; then
        e_header "Installing awscli and dependencies"
        brew_install awscli
        brew_install awsume
        brew_install cli53
    fi

    if [[ " ${DEVELOPMENT_PREFERENCES[@]} " =~ " ansible " ]]; then
        e_header "Installing ansible and dependencies"
        pip3_install ansible
        pip3_install cryptography
        pip3_install jmespath
        pip3_install passlib
        pip3_install boto
    fi

    if [[ " ${DEVELOPMENT_PREFERENCES[@]} " =~ " android-platform-tools " ]]; then
        e_header "Installing and configuring android-platform-tools"
        brew_install android-platform-tools
    fi

fi

# Display if backups were made
if [[ "$BACKUP" == true ]]; then
    e_header "Backups"
    e_arrow "Existing files were moved to $BACKUP_DIR"
fi

e_header "All done!"
