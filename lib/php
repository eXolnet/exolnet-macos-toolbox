#!/usr/bin/env bash

PHP_ETC="/usr/local/etc/php"
PHP_DEFAULT_VERSION="php74"

function pecl_update_channels()
{
    safe_execute "pecl update-channels" "Updated pecl channels" "Failed to update pecl channels"
}

# we have execute that in a separate function or the pipe won't work
# `yes` command is required to run in non interactive, because pecl might ask questions
function _pecl()
{
    yes '' | pecl $@
}

function pecl_install()
{
    local version=$1
    local package=$2
    local extra=${3:+-${3}} # if $3 is define, return "-$3"
    local file=${package}.so

    if [[ -f "$(php_get_extension_path $version)/$file" ]]; then
        e_success "Installed $package"
    else
        pecl_reinstall $@
    fi
}

function pecl_reinstall()
{
    local version=$1
    local package=$2
    local extra=${3:+-${3}} # if $3 is define, return "-$3"
    local file=${package}.so

    safe_execute "_pecl install --force ${package}${extra}" "Installed $package" "Failed to install $package"

    php_copy_extension "$version" "$file"
}

function php_get_extension_path()
{
    local version=$1

    local opt_prefix="$(brew --prefix php@$version)"
    local extension_dir="$(php-config --extension-dir)" # or `pecl config-get ext_dir`
    local php_basename="$(basename $extension_dir)"

    echo "$opt_prefix/lib/php/$php_basename"
}

function php_copy_extension()
{
    local version=$1
    local extension=$2

    local src="$(pecl config-get ext_dir)/$extension"
    local dest="$(php_get_extension_path $version)/$extension"

    copy_file "$src" "$dest"
}

function php_remove_imagick_extension_from_php_ini()
{
    local version=$1
    local file="$PHP_ETC/$version/php.ini"

    /usr/bin/sed -i '' '/extension="imagick.so"/d' $file
}

function php_remove_pcov_extension_from_php_ini()
{
    local version=$1
    local file="$PHP_ETC/$version/php.ini"

    /usr/bin/sed -i '' '/extension="pcov.so"/d' $file
}

function php_remove_redis_extension_from_php_ini()
{
    local version=$1
    local file="$PHP_ETC/$version/php.ini"

    /usr/bin/sed -i '' '/extension="redis.so"/d' $file
}

function php_remove_xdebug_extension_from_php_ini()
{
    local version=$1
    local file="$PHP_ETC/$version/php.ini"

    /usr/bin/sed -i '' '/zend_extension="xdebug.so"/d' $file
}

function php_configure_timezone()
{
    local version=$1
    local file="$PHP_ETC/$version/php.ini"

    /usr/bin/sed -Ei '' 's/^;?date.timezone =.*$/date.timezone = America\/Toronto/g' $file
}

function php_configure_upload_max_filesize()
{
    local version=$1
    local file="$PHP_ETC/$version/php.ini"

    /usr/bin/sed -Ei '' 's/^;?upload_max_filesize =.*$/upload_max_filesize = 8M/g' $file
}

function php_remove_imagick_extension_insert()
{
    local version=$1
    local file="$PHP_ETC/$version/conf.d/exolnet-ext-imagick.ini"

    if [[ -f "$file" ]]; then
        remove_insert_from_file2 $file
    fi
}

function php_remove_pcov_extension_insert()
{
    local version=$1
    local file="$PHP_ETC/$version/conf.d/exolnet-ext-pcov.ini"

    if [[ -f "$file" ]]; then
        remove_insert_from_file2 $file
    fi
}

function php_remove_redis_extension_insert()
{
    local version=$1
    local file="$PHP_ETC/$version/conf.d/exolnet-ext-redis.ini"

    if [[ -f "$file" ]]; then
        remove_insert_from_file2 $file
    fi
}

function php_remove_xdebug_extension_insert()
{
    local version=$1
    local file="$PHP_ETC/$version/conf.d/exolnet-ext-xdebug.ini"

    if [[ -f "$file" ]]; then
        remove_insert_from_file2 $file
    fi
}

function php_configure_imagick()
{
    local version=$1
    local file="$PHP_ETC/$version/conf.d/exolnet-ext-imagick.ini"

    remove_insert_from_file2 $file

cat >> $file <<EOL
; EXOLNET-MACOS-TOOLBOX BEGIN
[imagick]
extension="$(php_get_extension_path $version)/imagick.so"
; EXOLNET-MACOS-TOOLBOX END
EOL
}

function php_configure_pcov()
{
    local version=$1
    local file="$PHP_ETC/$version/conf.d/exolnet-ext-pcov.ini"

    remove_insert_from_file2 $file

cat >> $file <<EOL
; EXOLNET-MACOS-TOOLBOX BEGIN
[pcov]
extension="$(php_get_extension_path $version)/pcov.so"
; EXOLNET-MACOS-TOOLBOX END
EOL
}

function php_configure_redis()
{
    local version=$1
    local file="$PHP_ETC/$version/conf.d/exolnet-ext-redis.ini"

    remove_insert_from_file2 $file

cat >> $file <<EOL
; EXOLNET-MACOS-TOOLBOX BEGIN
[redis]
extension="$(php_get_extension_path $version)/redis.so"
; EXOLNET-MACOS-TOOLBOX END
EOL
}

function php_configure_xdebug()
{
    local version=$1
    local file="$PHP_ETC/$version/conf.d/exolnet-ext-xdebug.ini"

    remove_insert_from_file2 $file

cat >> $file <<EOL
; EXOLNET-MACOS-TOOLBOX BEGIN
[xdebug]
zend_extension="$(php_get_extension_path $version)/xdebug.so"
xdebug.remote_enable=1
xdebug.idekey=PHPSTORM
; EXOLNET-MACOS-TOOLBOX END
EOL
}

function php_create_phpinfo()
{
cat > $HOME/Sites/phpinfo.php <<EOL
<?php
// EXOLNET-MACOS-TOOLBOX
phpinfo();
EOL
}

function php_get_current_version()
{
    local php_path="$(dirname "$(which php)")"

    if [[ "$php_path" != "/usr/local/bin" ]]; then
        return 1
    fi

    php -d display_errors=0 -r "echo 'php'.str_replace('.', '', substr(phpversion(), 0, 3));" 2> /dev/null
}

function php_convert_version_to_homebrew()
{
    case "$1" in
        php72)
            echo 'php@7.2'
            ;;

        php73)
            echo 'php@7.3'
            ;;

        php74)
            echo 'php@7.4'
            ;;

        *)
            echo 'php_invalid'

    esac
}

function brew_unlink_all_php()
{
    brew_is_installed php@5.6 && brew_unlink php@5.6
    brew_is_installed php@7.0 && brew_unlink php@7.0
    brew_is_installed php@7.1 && brew_unlink php@7.1
    brew_is_installed php@7.2 && brew_unlink php@7.2
    brew_is_installed php@7.3 && brew_unlink php@7.3
    brew_is_installed php@7.4 && brew_unlink php@7.4
}
