#!/usr/bin/env bash

function git_fetch()
{
    git -C "$TOOLBOX" fetch
}

function git_merge()
{
    git -C "$TOOLBOX" merge --ff-only
}

function git_configure_global_gitignore()
{
    local gitignore=$1

    git config --global core.excludesfile "$gitignore"
}

function git_create_global_gitignore()
{
    local gitignore=$(git config --global --includes core.excludesfile)

    if [[ -z $gitignore ]]; then
        gitignore="$HOME/.gitignore"
        safe_execute "git_configure_global_gitignore $gitignore" "Configured global gitignore file" "Failed to configure global gitignore file"
    fi

    if [[ ! -f $gitignore ]]; then
        create_file "$gitignore"
    fi
}

function git_add_file_to_global_gitignore()
{
    local file=$1
    local gitignore=$(git config --global --includes core.excludesfile)

    if [[ -z $gitignore || ! -f $gitignore ]]; then
        return 1
    fi

    egrep -q "^${file}$" "$gitignore" || echo "$file" >> "$gitignore"
}

function git_create_global_husky_config()
{
    local husky_config_dir="$HOME/.config/husky"
    local husky_config_file="$husky_config_dir/init.sh"

    mkdir -p "$husky_config_dir"
    touch "$husky_config_file"

    remove_insert_from_file "$husky_config_file"

cat >> "$husky_config_file" <<'EOL'
# EXOLNET-MACOS-TOOLBOX BEGIN
if [ -f /opt/homebrew/bin/brew ]; then
    brew_bin=/opt/homebrew/bin
elif [ -f /usr/local/bin/brew ]; then
    brew_bin=/usr/local/bin
fi

if [ ! -z "$brew_bin" ]; then
    brew_bin=${brew_bin/\//\/}
    # Insert brew bin directory before /usr/bin to allow programs
    # like SourceTree to add a path to its custom git executable
    export PATH=${PATH/\/usr\/bin:/$brew_bin:\/usr\/bin:}
fi
# EXOLNET-MACOS-TOOLBOX END
EOL
}
